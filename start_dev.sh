#!/bin/bash

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env
if [ -f .env ]; then
  export $(grep -v '^#' .env | xargs)
else
  echo "‚ö†Ô∏è .env file not found. Some variables might be missing."
fi

sudo fuser -k 8000/tcp
sudo fuser -k 4000/tcp
# –§—É–Ω–∫—Ü–∏–∏ –∑–∞–ø—É—Å–∫–∞
start_bot() {
  echo "üöÄ Starting Telegram Bot..."
  /home/ubuntu/Telegram-bot-MiniApp-template/venv/bin/python tgbot &
  BOT_PID=$!
  echo "‚úÖ Bot PID: $BOT_PID"
}

start_frontend() {
  echo "üåê Starting React Frontend..."
  pushd webapp_frontend > /dev/null
  npm run dev &
  FRONTEND_PID=$!
  popd > /dev/null
  echo "‚úÖ Frontend PID: $FRONTEND_PID"
}

start_backend() {
  echo "‚öôÔ∏è Starting FastAPI Backend with Uvicorn..."
  : "${BACKEND_HOST:?BACKEND_HOST is not set}"
  : "${BACKEND_PORT:?BACKEND_PORT is not set}"
  : "${SSL_KEY:?SSL_KEY is not set}"
  : "${SSL_CERT:?SSL_CERT is not set}"
  
  uvicorn webapp_backend.webapp:app --host ${BACKEND_HOST} --port ${BACKEND_PORT} \
    --ssl-keyfile=${SSL_KEY} \
    --ssl-certfile=${SSL_CERT} \
    --reload &
  BACKEND_PID=$!
  echo "‚úÖ Backend PID: $BACKEND_PID"
}

# –ú–µ–Ω—é –≤—ã–±–æ—Ä–∞
echo ""
echo "Chose component to start:"
echo "1) Telegram Bot"
echo "2) Frontend (React)"
echo "3) Backend (FastAPI)"
echo "4) All"
echo ""

read -p "Your selection (1-4, Enter to start all): " choice
echo ""

# –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–∞–ª Enter, —Å—Ç–∞–≤–∏–º choice=4
if [ -z "$choice" ]; then
  choice=4
fi

case "$choice" in
  1)
    start_bot
    wait $BOT_PID
    ;;
  2)
    start_frontend
    wait $FRONTEND_PID
    ;;
  3)
    start_backend
    wait $BACKEND_PID
    ;;
  4)
    start_bot
    start_frontend
    start_backend
    echo ""
    echo "üîÑ –í—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∑–∞–ø—É—â–µ–Ω—ã."
    wait $BOT_PID $FRONTEND_PID $BACKEND_PID
    ;;
  *)
    echo "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã."
    exit 1
    ;;
esac
